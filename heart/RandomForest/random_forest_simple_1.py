# -*- coding: utf-8 -*-
"""Random_Forest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WNSMHah4k1FidvX6-3-lu5CGwU-q73qM
"""

from sklearn.model_selection import train_test_split
import pandas as pd
import numpy as np
from keras.models import Sequential
from keras.layers import Dense, Activation, Flatten
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import f1_score
from sklearn.metrics import accuracy_score
from keras.callbacks import ModelCheckpoint
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt
import matplotlib
from sklearn.model_selection import StratifiedKFold
from sklearn.metrics import roc_curve, auc
import csv

# %matplotlib inline
#matplotlib.rcParams.update({'font.size': 20})
##importing dataset:

url_input = 'https://raw.githubusercontent.com/AigerimJ/heart_disease/master/heart/train/train.csv?token=ATmRgDIt8LL9NdjbX091iBYA_RE-QLfkks5clxRpwA%3D%3D'

dataset = pd.read_csv(url_input)
dataset.head()

y = dataset['present_heart_disease']
X = dataset.drop(['patient_id', 'present_heart_disease'], axis = 1)


for i in range(len(X.values)):
  if(X.thal.values[i] == 'normal'):
    X.thal.values[i] = 1
    
  if(X.thal.values[i] == 'fixed_defect'):
    X.thal.values[i] = 2
  
  if(X.thal.values[i] == 'reversible_defect'):
    X.thal.values[i] = 3
    

# print(y)
# Split the dataset to train and test data
# train_X, test_X, train_y, test_y = train_test_split(X, y, test_size=0.25, random_state=0)

## Setting Random Forest:

parameters = {'bootstrap': True,
              'min_samples_leaf': 3,
              'n_estimators': 50, 
              'min_samples_split': 10,
              'max_features': 'sqrt',
              'max_depth': 6,
              'max_leaf_nodes': None}


RF_model = RandomForestClassifier(**parameters)

##fitting it:
RF_model.fit(X, y)

RF_predictions = RF_model.predict(X)
score = accuracy_score(y ,RF_predictions)
print(score)

"""##Now real test goes next:"""

##test values:

url_input_2 = 'https://raw.githubusercontent.com/AigerimJ/heart_disease/master/heart/test/test_values.csv?token=ATmRgCpws27z69mW58ssz9qNFaZwrnBVks5cllChwA%3D%3D'

dataset2 = pd.read_csv(url_input_2)
dataset2.head()

X_test2 = dataset2.drop(['patient_id'], axis = 1)

## we replace them as it cannot read string values:
for i in range(len(X_test2.values)):
  if(X_test2.thal.values[i] == 'normal'):
    X_test2.thal.values[i] = 1
    
  if(X_test2.thal.values[i] == 'fixed_defect'):
    X_test2.thal.values[i] = 2
  
  if(X_test2.thal.values[i] == 'reversible_defect'):
    X_test2.thal.values[i] = 3

# predict and show
Y_pred2 = np.empty((len(X_test2), 1))

for i in range(len(X_test2)):
  Y_pred2[i] += RF_model.predict_proba([X_test2.values[i]])[:,1]

  print(i,") Labeled case: %2f" %Y_pred2[i])
  




